-- #2941
CREATE TABLE test(id integer, geog geography(multilinestring,4269));
select sn_create_distributed_table('test', 'id', 'none');
ERROR:  type "public.geography" does not exist
CONTEXT:  while executing command on localhost:57637
SQL statement "SELECT pg_catalog.create_distributed_table('test','id','hash','none')"
PL/pgSQL function sn_create_distributed_table(regclass,text,text) line 58 at EXECUTE
INSERT INTO test VALUES (1, 'SRID=4269;MULTILINESTRING((0 0, 1 1))');
SELECT id,ST_AsText(geog) FROM test;
 id |         st_astext          
----+----------------------------
  1 | MULTILINESTRING((0 0,1 1))
(1 row)

DROP TABLE test;
-- #2422
CREATE TABLE dwithgeogbug (
    gid integer,
    geog geography
);
select sn_create_distributed_table('dwithgeogbug', 'gid', 'none');
ERROR:  type "public.geography" does not exist
CONTEXT:  while executing command on localhost:57637
SQL statement "SELECT pg_catalog.create_distributed_table('dwithgeogbug','gid','hash','none')"
PL/pgSQL function sn_create_distributed_table(regclass,text,text) line 58 at EXECUTE
INSERT INTO dwithgeogbug (gid, geog) VALUES (1, '0103000020E6100000010000000B0000000AA2F068F47651C0F7893DEB70B8454007ABD4C6D57651C000FB650799B84540C21AA2645A7651C011C24BA84AB8454089A9A325E87751C03314EB5453B74540AF9ED96BF57751C0BF9818F889B74540E936A498B47751C0690C87D1C5B74540F5386204DC7751C02FCA658F1AB8454077B65F7B657751C012C586EE37B845408C1862C5977751C00F17E41674B84540D4012F57357751C0AD3BC67E99B845400AA2F068F47651C0F7893DEB70B84540');
INSERT INTO dwithgeogbug (gid, geog
SELECT
'#2422' as ticket, gid, radius,
_ST_DWithin(geog, tgeog, radius, true) AS dwithin_t,
_ST_DWithin(geog, tgeog, radius, false) AS dwithin_f,
round(ST_Distance(geog, tgeog, true)::numeric,3) AS distance_t,
round(ST_Distance(geog, tgeog, false)::numeric,3) AS distance_f,
round(_ST_DistanceUnCached(geog, tgeog)::numeric,3) AS distance_uncached,
round(_ST_DistanceTree(geog, tgeog)::numeric,3) AS distance_tree
FROM dwithgeogbug
CROSS JOIN ST_GeogFromText('POINT(-69.83262 43.43636)') AS tgeog
CROSS JOIN (VALUES (1609),(1600),(1068)) AS t (radius)
ORDER BY distance_t;
 ticket | gid | radius | dwithin_t | dwithin_f | distance_t | distance_f | distance_uncached | distance_tree 
--------+-----+--------+-----------+-----------+------------+------------+-------------------+---------------
 #2422  |   2 |   1609 | t         | t         |   1005.627 |   1006.248 |          1005.627 |      1005.627
 #2422  |   2 |   1600 | t         | t         |   1005.627 |   1006.248 |          1005.627 |      1005.627
 #2422  |   2 |   1068 | t         | t         |   1005.627 |   1006.248 |          1005.627 |      1005.627
 #2422  |   1 |   1609 | t         | t         |   1400.230 |   1396.816 |          1400.230 |      1400.230
 #2422  |   1 |   1600 | t         | t         |   1400.230 |   1396.816 |          1400.230 |      1400.230
 #2422  |   1 |   1068 | f         | f         |   1400.230 |   1396.816 |          1400.230 |      1400.230
(6 rows)

DROP TABLE dwithgeogbug;
